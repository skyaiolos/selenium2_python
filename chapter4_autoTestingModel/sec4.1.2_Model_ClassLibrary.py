__author__ = "Jianguo Jin (jinjianguosky@hotmail.com)"

#!/usr/bin/python3 
# -*- coding:utf-8 -*-  
# Created by Jianguo on 2017/7/29
"""
    Description:
        第 四 章 自动化测试模型
        一个自动化测试框架就是一个集成体系，在这一体系中包含测试功能的函数库、测试数据源、测试对
象识别标准，以及种可重用的模块。自动化测试框架在发展的过程中经历了几个阶段，模块驱动测试、数
据驱动测试、对象驱动测试。本章就带领读者了解这几种测试模型。
第一节、 自动化 测试模型介绍
自动化测试模型是自动化测试架构的基础，自动化测试的发展也经历的不同的阶段，不断有新的模型
（概念）被提出，了解和使用这些自动化模型将帮助我们构建一个灵活可维护性的自动化架构。
4.1.1 线性测试
通过录制或编写脚本，一个脚本完成一个场景（一组完整功能操作），通过对脚本的回放来进行自动
化测试。这是早期进行自动化测试的一种形式；我们在上一章中练习使用 webdriver API 所编写的脚本
也是这种形式。
测试脚本一
4.1.2 模块化与类库
我们会清晰的发现在上面的脚本中，其实有不少内容是重复的；于是我们就考虑能不能把重复的部分
写成一个公共的模块，需要的时候进行调用，这样就大大提高了我们编写脚本的效率。
login.py

"""
#登录模块  - login.py


#退出模块 - quit.py

## 测试用例
from selenium import webdriver
import login,logout #调用登录、退出模块

driver = webdriver.Chrome()
driver.get("http://www.sohu.com")

#调用登录模块
login.login()
#其它个性化操作
# .....

#调用退出模块
logout.logout()



"""
    注意，上面用例非完整代码。
通过阅读上面的代码发现，我们可以把脚本中相同的部分代码独立出来，形成模块或库；这样做有两
方面的优点：
一方面提高了开发效率，不用重复的编写相同的脚本；假如，我已经写好一个登录模块，我后续需要
做的就是在需要的地方调用，不同重复造轮子。
另一方面方便了代码的维护，假如登录模块发生了变化，我只用修改 login.py 文件中登录模块的代
码即可，那么所有调用登录模块的脚本不用做任何修改。
"""
